name: Build, Push to GHCR and Deploy

on:
  push:
    branches:
      - master

env:
  REGISTRY: ghcr.io
  ORG: projekt-grupowy-51
  TAG: latest

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Upload docker-compose.prod.yml to VPS
        run: |
          sshpass -p "${{ secrets.VPS_PASSWORD }}" scp -o StrictHostKeyChecking=no docker-compose.prod.yml ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:/vidmark-deploy/docker-compose.prod.yml

      - name: Log in to GHCR
        run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push app image
        uses: docker/build-push-action@v5
        with:
          context: ./ProjektGrupowy.API
          push: true
          tags: ghcr.io/${{ env.ORG }}/vidmark-app:${{ env.TAG }}

      - name: Build and push frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: true
          tags: ghcr.io/${{ env.ORG }}/vidmark-frontend:${{ env.TAG }}
          build-args: |
            VITE_API_BASE_URL=https://api.vidmark.affectivese.org/api
            VITE_SIGNALR_HUB_URL=https://api.vidmark.affectivese.org/hub/app

      - name: Build and push nginx image
        uses: docker/build-push-action@v5
        with:
          context: ./nginx
          push: true
          tags: ghcr.io/${{ env.ORG }}/vidmark-nginx:${{ env.TAG }}

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Install SSH client and sshpass
        run: sudo apt-get update && sudo apt-get install -y sshpass

      - name: Create .env file from secrets
        run: |
          cat <<EOF > .env
          POSTGRES_DB=${{ secrets.POSTGRES_DB }}
          POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}
          POSTGRES_USER=${{ secrets.POSTGRES_USER }}
          POSTGRES_PASS=${{ secrets.POSTGRES_PASS }}
          POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}

          JWT_SECRET=${{ secrets.JWT_SECRET }}
          SCIENTIST_TOKEN=${{ secrets.SCIENTIST_TOKEN }}
          EOF

      - name: Upload .env to VPS
        run: |
          sshpass -p "${{ secrets.VPS_PASSWORD }}" scp -o StrictHostKeyChecking=no .env ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:/vidmark-deploy/.env

      - name: Deploy and wipe .env on VPS
        env:
          GHCR_TOKEN: ${{ secrets.GHCR_TOKEN }}
          GITHUB_ACTOR: ${{ github.actor }}
        run: |
          sshpass -p "${{ secrets.VPS_PASSWORD }}" ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << 'EOF'
          echo "$GHCR_TOKEN" | docker login ghcr.io -u "$GITHUB_ACTOR" --password-stdin
          cd /vidmark-deploy
          docker compose --env-file .env -f docker-compose.prod.yml pull
          docker compose --env-file .env -f docker-compose.prod.yml up -d
          rm -f .env
          EOF

      - name: Delete .env locally from runner
        run: rm -f .env
